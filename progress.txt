Добавляем в наши модели Post и Category "магический" метод __str__ в models.py;
Регистрируем наши модели в admin.py;
Для вывода списка новостей используем дженерик ListView и модель Post, для каждой отдельной новости DetailView
(при условии, что будет предоставлен целочисленный идентификатор объекта);
Создаём файл urls.py в директории нашего приложения;
В него импортируем наши представления и указываем путь к нашему списку;
Создаем шаблоны для списка новостей (news.html) и каждой отдельной новости (new.html);
Создаем папку templatetags и файл my_filter в ней, для хранения наших шаблонов.

По недочетам с прошлого задания:
исправил модель PostCategory (убрал связь "многие ко многим")
____________________________________________________________________________________________________________________
Изменения внесенные с модулем D7!!!

Добавляем пагинацию для вывода определенного количества записей на странице (изменили views)
Добавляем ссылки на страницы в шаблоне (news.html)
Добавляем django_filters и создаем файл filters.py в папке нашего приложения
Создаем класс с указанием, как фильтровать данные Post
Используем новый класс в представлении (views) для фильтрации списка новостей
Добавляем в (news) поля для объявленного фильтра, используя переменную из шаблона, и кнопку отправки формы
Создаем файл custom_tags.py в котором создаем тег, который позволит сохранять параметры фильтрации при переключении страниц
Применим наш тег в шаблоне (для каждой ссылки пагинации укажем обработку через новый тег)
Создаем файл forms.py и в нем форму для модели Post (в отличии от сгенерированой django-filter)
Он будет применятся для изменения в нашей БД (создание, изменение, удаление данных)
В шаблон добавляем тег {% csrf_token %}. Он помогает защитится от части недостатков протокола HTTP
Создаем новые представления для создания, поиска, редактирования и удаления статей; и регистрируем их

Не получилось реализовать:
неправильная реализация в urls.py (соответственно и браузере идут следующие ссылки:
    news/create;
    news/edit;
    news/delete;
    news/article/create;
    news/article/edit;
    news/article/delete;
Соответственно ссылки на создание работают некоректно (статья создается по умолчанию с типом "новость",
поменять можно только в админ-панели).
